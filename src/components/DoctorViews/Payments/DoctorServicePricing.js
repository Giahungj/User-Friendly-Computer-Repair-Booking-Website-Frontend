import React, { useEffect, useState, useContext } from "react";
import { Card, CardContent, Typography, Button, List, ListItem, Box, CircularProgress } from "@mui/material";
import { fetchAvailableServices, registerDoctorService } from "../../../services/DoctorServiceService";
import { AuthContext } from "../../../context/AuthContext";
import { toast } from "react-toastify";

const DoctorServicePricing = () => {
    const [services, setServices] = useState([]);
    const [loading, setLoading] = useState(true); // Th√™m state loading
    const { auth } = useContext(AuthContext);
    const doctorId = auth?.account?.doctorId;

    useEffect(() => {
        const fetchServices = async () => {
            try {
                const res = await fetchAvailableServices();
                if (res?.EC === 0) {
                    setServices(res.DT);
                } else {
                    toast.error("Kh√¥ng th·ªÉ t·∫£i d·ªãch v·ª•");
                }
            } catch (error) {
                toast.error("L·ªói k·∫øt n·ªëi");
            } finally {
                setLoading(false); // ƒê·∫∑t loading l√† false sau khi t·∫£i xong
            }
        };
        fetchServices();
    }, []);

    const handleRegisterService = async (serviceId) => {
        if (!doctorId) {
            toast.error("L·ªói: Kh√¥ng t√¨m th·∫•y ID b√°c sƒ©.");
            return;
        }

        const res = await registerDoctorService(doctorId, serviceId);
        if (res?.EC === 0) {
            toast.success("ƒêƒÉng k√Ω th√†nh c√¥ng!");
        } else if (res?.EC !== 1) {
            toast.warning(
                <div>
                    Th√¥ng b√°o: {res.EM}{" "}
                    <a href="http://localhost:3000/doctor/service-management">
                        Vui l√≤ng ki·ªÉm tra l·∫°i th√¥ng tin ·ªü ƒë√¢y.
                    </a>
                </div>
            );
        } else {
            toast.error(`L·ªói: ${res.EM || "Kh√¥ng th·ªÉ ƒëƒÉng k√Ω d·ªãch v·ª•"}`);
        }
    };

    return (
        <div className="container py-5 vh-100">
            <h1 className="text-center mb-4">ƒêƒÉng k√Ω G√≥i d·ªãch v·ª• d√†nh cho b√°c sƒ© chuy√™n m√¥n</h1>
            <p className="text-center mb-4">
                Ch·ªçn g√≥i d·ªãch v·ª• ph√π h·ª£p v·ªõi nhu c·∫ßu c·ªßa b·∫°n. <br />
                N·∫øu b·∫°n kh√¥ng ch·∫Øc ch·∫Øn, h√£y th·ª≠ ngay g√≥i <span className="fw-bold text-green-400">Trung b√¨nh</span> <br />
                ƒê·ªÉ tr·∫£i nghi·ªám c√°c t√≠nh nƒÉng c∆° b·∫£n, v√† n√¢ng c·∫•p sau khi ƒë√£ quen v·ªõi d·ªãch v·ª•!
            </p>

            <div className="row g-4">
                {loading ? (
                    <Box sx={{ display: 'flex', justifyContent: 'center', width: '100%' }}>
                        <CircularProgress size="lg" />
                    </Box>
                ) : (
                    services.map((service) => (
                        <div key={service.id} className="col-12 col-md-6 col-lg-4">
                            <Card
                                sx={{
                                    backgroundColor: "#fff",
                                    color: "#000",
                                    border: `2px solid ${service.id === 1 ? "#ccc" : service.id === 2 ? "#4CAF50" : "#FFD700"}`,
                                    borderRadius: 2,
                                    height: "100%",
                                    display: "flex",
                                    flexDirection: "column",
                                    boxShadow: 3,
                                    position: "relative",
                                    overflow: "hidden",
                                }}
                                className="shadow-sm hover"
                            >
                                {service.recommended && (
                                    <Box
                                        sx={{
                                            position: "absolute",
                                            top: 0,
                                            left: "50%",
                                            transform: "translateX(-50%)",
                                            backgroundColor:
                                                service.id === 1 ? "#ccc" : service.id === 2 ? "#4CAF50" : "#FFD700",
                                            color: "#fff",
                                            fontSize: "0.9rem",
                                            fontWeight: "bold",
                                            px: 2,
                                            py: 1,
                                            borderRadius: "0 0 10px 10px",
                                        }}
                                    >
                                        üåü Khuy√™n d√πng
                                    </Box>
                                )}

                                <CardContent className="mt-5 text-center d-flex flex-column flex-grow-1">
                                    <Typography
                                        variant="h6"
                                        fontWeight="bold"
                                        sx={{
                                            color:
                                                service.id === 1 ? "#666" : service.id === 2 ? "#4CAF50" : "#FFD700",
                                        }}
                                    >
                                        {service.name}
                                    </Typography>
                                    <Typography
                                        variant="h5"
                                        fontWeight="bold"
                                        sx={{
                                            my: 2,
                                            color:
                                                service.id === 1 ? "#666" : service.id === 2 ? "#4CAF50" : "#FFD700",
                                        }}
                                    >
                                        {service.price === 0 ? "Mi·ªÖn ph√≠" : `${service.price}/th√°ng`}
                                    </Typography>

                                    <List sx={{ flexGrow: 1 }}>
                                        {service.features?.split("\n").map((feature, idx) => (
                                            <ListItem key={idx} sx={{ justifyContent: "center" }}>
                                                {feature}
                                            </ListItem>
                                        ))}
                                    </List>

                                    <Button
                                        variant="contained"
                                        sx={{
                                            backgroundColor:
                                                service.id === 1 ? "#ccc" : service.id === 2 ? "#4CAF50" : "#FFD700",
                                            color: "#fff",
                                            "&:hover": {
                                                backgroundColor:
                                                    service.id === 1 ? "#ccc" : service.id === 2 ? "#45a045" : "#e6c200",
                                            },
                                            "&.Mui-disabled": {
                                                backgroundColor: "#ccc",
                                                color: "#fff",
                                            },
                                        }}
                                        className="mt-3"
                                        onClick={() => handleRegisterService(service.id)}
                                        disabled={service.id === 1} // V√¥ hi·ªáu h√≥a cho id=1
                                    >
                                        {service.id === 1 ? "G√≥i m·∫∑c ƒë·ªãnh" : "Ch·ªçn g√≥i n√†y"}
                                    </Button>
                                </CardContent>
                            </Card>
                        </div>
                    ))
                )}
            </div>
        </div>
    );
};

export default DoctorServicePricing;